<?xml version="1.0" encoding="UTF-8"?>
<!-- IMPORTANT: This is an internal file that has been generated
     by the Xilinx ISE software.  Any direct editing or
     changes made to this file may result in unpredictable
     behavior or data corruption.  It is strongly advised that
     users do not edit the contents of this file. -->
<messages>
<msg type="warning" file="Xst" num="863" delta="old" >&quot;<arg fmt="%s" index="1">lab6.v</arg>&quot; line <arg fmt="%d" index="2">36</arg>: Name conflict (<arg fmt="%s" index="3">&lt;q&gt; and &lt;Q&gt;, renaming q as q_rnm0</arg>).
</msg>

<msg type="info" file="Xst" num="1432" delta="old" >Contents of array &lt;<arg fmt="%s" index="1">data</arg>&gt; may be accessed with a negative index, causing simulation mismatch.
</msg>

<msg type="info" file="Xst" num="1433" delta="old" >Contents of array &lt;<arg fmt="%s" index="1">data</arg>&gt; may be accessed with an index that exceeds the array size. This could cause simulation mismatch.
</msg>

<msg type="info" file="Xst" num="1432" delta="old" >Contents of array &lt;<arg fmt="%s" index="1">data</arg>&gt; may be accessed with a negative index, causing simulation mismatch.
</msg>

<msg type="info" file="Xst" num="1433" delta="old" >Contents of array &lt;<arg fmt="%s" index="1">data</arg>&gt; may be accessed with an index that exceeds the array size. This could cause simulation mismatch.
</msg>

<msg type="info" file="Xst" num="1433" delta="old" >Contents of array &lt;<arg fmt="%s" index="1">data</arg>&gt; may be accessed with an index that exceeds the array size. This could cause simulation mismatch.
</msg>

<msg type="info" file="Xst" num="2679" delta="old" >Register &lt;<arg fmt="%s" index="1">q_rnm0</arg>&gt; in unit &lt;<arg fmt="%s" index="2">lab6</arg>&gt; has a constant value of <arg fmt="%s" index="3">1101011</arg> during circuit operation. The register is replaced by logic.
</msg>

<msg type="warning" file="Xst" num="1780" delta="old" >Signal &lt;<arg fmt="%s" index="1">vector</arg>&gt; is never used or assigned. This unconnected signal will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1780" delta="old" >Signal &lt;<arg fmt="%s" index="1">rx_temp</arg>&gt; is never used or assigned. This unconnected signal will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="646" delta="old" >Signal &lt;<arg fmt="%s" index="1">recv_error</arg>&gt; is assigned but never used. This unconnected signal will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1872" delta="old" >Variable &lt;<arg fmt="%s" index="1">p</arg>&gt; is used but never assigned.
</msg>

<msg type="warning" file="Xst" num="1780" delta="old" >Signal &lt;<arg fmt="%s" index="1">num2</arg>&gt; is never used or assigned. This unconnected signal will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1780" delta="old" >Signal &lt;<arg fmt="%s" index="1">num1</arg>&gt; is never used or assigned. This unconnected signal will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1872" delta="old" >Variable &lt;<arg fmt="%s" index="1">n</arg>&gt; is used but never assigned.
</msg>

<msg type="warning" file="Xst" num="1870" delta="old" >Variable &lt;<arg fmt="%s" index="1">m</arg>&gt; is used but never assigned. Tied to value <arg fmt="%s" index="2">00000000000000000000000000000000</arg>.
</msg>

<msg type="warning" file="Xst" num="1872" delta="new" >Variable &lt;<arg fmt="%s" index="1">k</arg>&gt; is used but never assigned.
</msg>

<msg type="warning" file="Xst" num="646" delta="old" >Signal &lt;<arg fmt="%s" index="1">is_receiving</arg>&gt; is assigned but never used. This unconnected signal will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1872" delta="old" >Variable &lt;<arg fmt="%s" index="1">idx</arg>&gt; is used but never assigned.
</msg>

<msg type="warning" file="Xst" num="1780" delta="old" >Signal &lt;<arg fmt="%s" index="1">hex</arg>&gt; is never used or assigned. This unconnected signal will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="646" delta="new" >Signal &lt;<arg fmt="%s" index="1">ch</arg>&gt; is assigned but never used. This unconnected signal will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1780" delta="old" >Signal &lt;<arg fmt="%s" index="1">ans</arg>&gt; is never used or assigned. This unconnected signal will be trimmed during the optimization process.
</msg>

<msg type="info" file="Xst" num="1439" delta="old" >HDL ADVISOR - You may have used signed signal(s) to address this RAM. If that is the case, negative values being out of range, sign bits were ignored. As a result only the first half of the RAM is actually accessed. Please check your source code.
</msg>

<msg type="info" file="Xst" num="2117" delta="old" >HDL ADVISOR - Mux Selector &lt;<arg fmt="%s" index="1">Q</arg>&gt; of Case statement line <arg fmt="%s" index="2">92</arg> was re-encoded using one-hot encoding. The case statement will be optimized (default statement optimization), but this optimization may lead to design initialization problems. To ensure the design works safely, you can:
	- add an &apos;<arg fmt="%s" index="3">INIT</arg>&apos; attribute on signal &lt;<arg fmt="%s" index="4">Q</arg>&gt; (optimization is then done without any risk)
	- use the attribute &apos;<arg fmt="%s" index="5">signal_encoding</arg> <arg fmt="%s" index="6">user</arg>&apos; to avoid onehot optimization
	- use the attribute &apos;<arg fmt="%s" index="7">safe_implementation</arg> <arg fmt="%s" index="8">yes</arg>&apos; to force XST to perform a safe (but less efficient) optimization
</msg>

<msg type="info" file="Xst" num="3218" delta="old" >HDL ADVISOR - The RAM &lt;<arg fmt="%s" index="1">Mram_data</arg>&gt; will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">send_counter_6</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">lab6</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">send_counter_7</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">lab6</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">i_6</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">lab6</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">i_7</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">lab6</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">i_8</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">lab6</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">i_9</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">lab6</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">i_10</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">lab6</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">i_11</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">lab6</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">i_12</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">lab6</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">i_13</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">lab6</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">i_14</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">lab6</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">i_15</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">lab6</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">i_16</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">lab6</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">i_17</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">lab6</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">i_18</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">lab6</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">i_19</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">lab6</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">i_20</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">lab6</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">i_21</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">lab6</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">i_22</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">lab6</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">i_23</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">lab6</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">i_24</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">lab6</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">i_25</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">lab6</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">i_26</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">lab6</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">i_27</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">lab6</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">i_28</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">lab6</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">i_29</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">lab6</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">i_30</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">lab6</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">i_31</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">lab6</arg>&gt;.
</msg>

</messages>

